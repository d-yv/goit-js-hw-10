{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputField = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\n\nbutton.setAttribute('disabled', '');\nlet userSelectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const dateNow = new Date();\n    let dateVerify = selectedDates[0];\n    if (dateVerify > dateNow) {\n      userSelectedDate = dateVerify;\n      button.removeAttribute('disabled');\n    } else {\n      button.setAttribute('disabled', '');\n      iziToast.show({\n        title: 'Error',\n        titleColor: 'red',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nbutton.addEventListener('click', timer);\n\nfunction timer() {\n  button.setAttribute('disabled', '');\n  inputField.setAttribute('disabled', '');\n  const intervalId = setInterval(() => {\n    const now = new Date();\n    const difference = userSelectedDate - now;\n\n    if (difference <= 0) {\n      clearInterval(intervalId);\n      inputField.removeAttribute('disabled');\n    } else {\n      const time = convertMs(difference);\n      document.querySelector('[data-days]').textContent = String(\n        time.days\n      ).padStart(2, '0');\n      document.querySelector('[data-hours]').textContent = String(\n        time.hours\n      ).padStart(2, '0');\n      document.querySelector('[data-minutes]').textContent = String(\n        time.minutes\n      ).padStart(2, '0');\n      document.querySelector('[data-seconds]').textContent = String(\n        time.seconds\n      ).padStart(2, '0');\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputField","button","userSelectedDate","options","selectedDates","dateNow","dateVerify","iziToast","flatpickr","timer","intervalId","difference","time","convertMs","ms","days","hours","minutes","seconds"],"mappings":"2GAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAS,SAAS,cAAc,QAAQ,EAE9CA,EAAO,aAAa,WAAY,EAAE,EAClC,IAAIC,EAAmB,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAU,IAAI,KACpB,IAAIC,EAAaF,EAAc,CAAC,EAC5BE,EAAaD,GACfH,EAAmBI,EACnBL,EAAO,gBAAgB,UAAU,IAEjCA,EAAO,aAAa,WAAY,EAAE,EAClCM,EAAS,KAAK,CACZ,MAAO,QACP,WAAY,MACZ,QAAS,qCACT,SAAU,UAClB,CAAO,EAEJ,CACH,EAEAC,EAAU,mBAAoBL,CAAO,EAErCF,EAAO,iBAAiB,QAASQ,CAAK,EAEtC,SAASA,GAAQ,CACfR,EAAO,aAAa,WAAY,EAAE,EAClCD,EAAW,aAAa,WAAY,EAAE,EACtC,MAAMU,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAaT,EADP,IAAI,KAGhB,GAAIS,GAAc,EAChB,cAAcD,CAAU,EACxBV,EAAW,gBAAgB,UAAU,MAChC,CACL,MAAMY,EAAOC,EAAUF,CAAU,EACjC,SAAS,cAAc,aAAa,EAAE,YAAc,OAClDC,EAAK,IACb,EAAQ,SAAS,EAAG,GAAG,EACjB,SAAS,cAAc,cAAc,EAAE,YAAc,OACnDA,EAAK,KACb,EAAQ,SAAS,EAAG,GAAG,EACjB,SAAS,cAAc,gBAAgB,EAAE,YAAc,OACrDA,EAAK,OACb,EAAQ,SAAS,EAAG,GAAG,EACjB,SAAS,cAAc,gBAAgB,EAAE,YAAc,OACrDA,EAAK,OACb,EAAQ,SAAS,EAAG,GAAG,CAClB,CACF,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}